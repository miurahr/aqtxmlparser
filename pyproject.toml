[project]
name = "aqtxmlparser"
requires-python = ">=3.9"
description = "parser library for Qt download Update.xml"
readme = "README.rst"
license = {text = "MIT License"}
authors = [
    {name = "Hiroshi Miura", email = "miurahr@linux.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ['defusedxml']
keywords = ['xml', 'aqt', 'solver', 'dfs']
dynamic = ["version"]

[project.optional-dependencies]
test = [
      "pytest",
      "pytest-cov",
      "pyannotate",
      "coverage[toml]>=5.2",
]
docs = [
      "sphinx>=5.0",
      "docutils",
]
check = [
      "mypy>=0.940",
      "mypy_extensions>=0.4.1",
      "check-manifest",
      "flake8",
      "flake8-black",
      "flake8-deprecated",
      "pygments",
      "readme-renderer",
]

[project.urls]
Homepage = "https://aqtxmlparser.readthedocs.io/"
Documentation = "https://aqtxmlparser.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/miurahr/aqtxmlparser/issues"
Source = "https://github.com/miurahr/aqtxmlparser"
Changelog = "https://github.com/miurahr/aqtxmlparser/blob/master/Changelog.rst"

[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=6.4.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.coverage.run]
branch = true
parallel = true
source = ["aqt"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]

[tool.black]
line-length = 125
target-version = ['py38']

[tool.isort]
known_first_party = ['aqt']
known_third_party = ["docutils", "flake8", "pyannotate_runtime", "pytest", "pytz", "setuptools", "sphinx", "yaml"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 125

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = true
show_column_numbers = true

[tool.check-manifest]
ignore = []

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = "test*.py"
norecursedirs = [".git", "_build", "tmp", ".eggs"]
markers = [
    "basic: mark a test as a basic feature test.",
    "unit: mark a test as an unit test.",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = check, py{39,310,311}
isolated_build = true

[testenv]
passenv = GITHUB_* PYTEST_ADDOPTS COVERALLS_*
extras = test
commands =
    python -m pytest -vv

[testenv:check]
extras = check
ignore_errors=true
commands =
    flake8 aqt
    check-manifest {toxinidir}

[testenv:clean]
deps = coverage[toml]>=5.2
skip_install = true
commands = coverage erase

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[gh-actions]
python =
    3.9: py39
    3.10: py310, check
    3.11: py311
"""
